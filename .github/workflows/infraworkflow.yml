name: Create Azure Resources

on: 
    push:
        paths: 
        - 'ARM/**'
        - '.github/workflows/infraworkflow.yml'
    workflow_dispatch:

env:
    AZURE_SUBSCRIPTION_ID: 72e7bb81-e5a0-4c0d-ac9d-702d05d687ec    # set this to your Azure Subscription Id
    AZURE_RESOURCEGROUP_NAME: myappresourcegroup                    # set this to your preferred resource group name
    AZURE_WEBAPP_NAME: huzapp99                                     # set this to your preferred web app name
    ASP_NAME: mysp1
    SQLSERVER_NAME: demo-webappsql-gh-actions-srv21                 # set this to your preferred SQL server name
    DATABASE_NAME: demo-webappsql-gh-actions-db21                   # set this to your preferred SQL database name
    SQLADMIN_LOGIN: ${{ secrets.SQLADMIN_LOGIN }}                   # Create a secret in your Github repo for the SQL Admin login name
    SQLADMIN_PASS: ${{ secrets.SQLADMIN_PASS }}                     # Create a secret in your Github repo for the SQL Admin password

permissions:
    id-token: write    # Required for federated identity login
    contents: read     # Required to read repo contents

jobs:
    build-and-deploy-to-dev:
      runs-on: ubuntu-latest

      steps:
        # Azure Login with Federated Identity
        - name: Azure Login with Federated Identity
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            federated-token: true  # Enable federated login using OIDC

        # Checkout
        - name: Checkout
          uses: actions/checkout@v2
          with:
            path: repo
          
        # Deployment of resource group template
        - name: Deploy ARM Template for Resource Group
          uses: azure/arm-deploy@v1
          with:
            scope: subscription
            subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
            region: centralus  # Set this to your target region
            template: repo/templates/azuredeploy.resourcegroup.json  # Set this to the location of your template file
            parameters: repo/templates/azuredeploy.resourcegroup.parameters.json rgName=${{ env.AZURE_RESOURCEGROUP_NAME }} # Override rgName in parameters file

        # Deployment of resources within the resource group
        - name: Deploy ARM Template for Resources
          uses: azure/arm-deploy@v1
          with:
            scope: resourcegroup
            subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
            resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
            region: centralus  # Set this to your target region
            template: repo/templates/azuredeploy.json  # Set this to the location of your template file
            parameters: repo/templates/azuredeploy.parameters.json webappName=${{ env.AZURE_WEBAPP_NAME }} aspName=${{ env.ASP_NAME }} sqlServerName=${{ env.SQLSERVER_NAME }} databaseName=${{ env.DATABASE_NAME }} sqlAdminLogin=${{ env.SQLADMIN_LOGIN }} sqlAdminPass=${{ env.SQLADMIN_PASS }}  # Set this to the location of your parameters file
